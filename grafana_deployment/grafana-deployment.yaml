# --- Deployment ---
# Manages the Pods running your application container.
apiVersion: apps/v1
kind: Deployment
metadata:
  # name: A unique name for your Deployment.
  name: grafana-deployment
  namespace: default
  labels:
    app: grafana
spec:
  replicas: 1 # e.g., 2
  selector:
    # Must match the labels on the Pod template below.
    matchLabels:
      app: grafana
  template:
    metadata:
      # Labels applied to the Pods created by this Deployment. Must match spec.selector.matchLabels.
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana@sha256:4ec289c4365c4093ef1adb4aa5549a955dccb95b8e3795fcb986ca8fe6d002f1 # updated (9/17/25) - moved to latest stable build.
        ports:
        - containerPort: 3000 # The port your application listens on INSIDE the container (e.g., 8080)
          name: grafana-http # Optional name for the port
        # volumeMounts: Mounts the volume requested by the PVC into the container.
        volumeMounts:
        - name: app-data # Must match the volume name defined below in spec.volumes
          # mountPath: The directory path inside the container where the storage will be accessible.
          mountPath: /app/data # e.g., /app/data or /var/www/html
        # --- Optional but Recommended ---
        resources:
          requests:
            memory: "184Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "1000m"
         # env:  <-- We'll use this to configure Grafana's data path
        env:
        - name: GF_PATHS_DATA
          value: /app/data/grafana_data  # Set Grafana's data path to our mounted volume
        # livenessProbe: ... (configure as needed)
        # readinessProbe: ... (configure as needed)

      # volumes: Defines the volumes available to the Pod.
      volumes:
      # - name: Must match the name used in volumeMounts above.
      - name: app-data # e.g., app-data
        # persistentVolumeClaim: Links this volume definition to the PVC created earlier.
        persistentVolumeClaim:
          # claimName: Must match the metadata.name of the PVC defined above.
          claimName: grafana-pvc